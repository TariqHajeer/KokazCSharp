// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Quqaz.Web.Models;

namespace Quqaz.Web.Migrations
{
    [DbContext(typeof(KokazContext))]
    [Migration("20231123185400_Add-Client-Messages")]
    partial class AddClientMessages
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Quqaz.Web.Models.Additional.ClientMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ClientMessages");
                });

            modelBuilder.Entity("Quqaz.Web.Models.AgentCountry", b =>
                {
                    b.Property<int>("AgentId")
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.HasKey("AgentId", "CountryId")
                        .HasName("PK_AgentCountr");

                    b.HasIndex("CountryId");

                    b.ToTable("AgentCountry");
                });

            modelBuilder.Entity("Quqaz.Web.Models.AgentOrderPrint", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("AgentPrintId")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "AgentPrintId")
                        .HasName("PK__AgentOrd__CAFCEB4A3800EF29");

                    b.HasIndex("AgentPrintId");

                    b.ToTable("AgentOrderPrint");
                });

            modelBuilder.Entity("Quqaz.Web.Models.AgentPrint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("DestinationName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DestinationPhone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)");

                    b.Property<int?>("DriverId")
                        .HasColumnType("int");

                    b.Property<string>("PrinterName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("DriverId");

                    b.ToTable("AgentPrint");
                });

            modelBuilder.Entity("Quqaz.Web.Models.AgentPrintDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AgentPrintId")
                        .HasColumnType("int");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ClientNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Region")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AgentPrintId");

                    b.ToTable("AgentPrintDetails");
                });

            modelBuilder.Entity("Quqaz.Web.Models.Branch", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Branches");

                    b.HasData(
                        new
                        {
                            Id = 4,
                            Name = "فرع الموصل"
                        },
                        new
                        {
                            Id = 8,
                            Name = "فرع اربيل"
                        },
                        new
                        {
                            Id = 3,
                            Name = "فرع سليمانية"
                        },
                        new
                        {
                            Id = 5,
                            Name = "فرع بغداد"
                        },
                        new
                        {
                            Id = 7,
                            Name = "فرع كروك"
                        });
                });

            modelBuilder.Entity("Quqaz.Web.Models.BranchToCountryDeliverryCost", b =>
                {
                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<decimal>("DeliveryCost")
                        .HasColumnType("decimal(6,0)");

                    b.Property<short>("Points")
                        .HasColumnType("SMALLINT");

                    b.HasKey("BranchId", "CountryId");

                    b.HasIndex("BranchId");

                    b.HasIndex("CountryId");

                    b.ToTable("BranchToCountryDeliverryCosts");

                    b.HasData(
                        new
                        {
                            BranchId = 3,
                            CountryId = 1,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 3,
                            CountryId = 2,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 3,
                            CountryId = 3,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 3,
                            CountryId = 4,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 3,
                            CountryId = 5,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 3,
                            CountryId = 6,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 3,
                            CountryId = 7,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 3,
                            CountryId = 8,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 3,
                            CountryId = 9,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 3,
                            CountryId = 10,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 3,
                            CountryId = 11,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 3,
                            CountryId = 12,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 3,
                            CountryId = 13,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 3,
                            CountryId = 14,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 3,
                            CountryId = 15,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 3,
                            CountryId = 16,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 3,
                            CountryId = 17,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 3,
                            CountryId = 18,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 3,
                            CountryId = 19,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 3,
                            CountryId = 20,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 3,
                            CountryId = 21,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 3,
                            CountryId = 22,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 3,
                            CountryId = 23,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 3,
                            CountryId = 24,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 3,
                            CountryId = 25,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 3,
                            CountryId = 26,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 3,
                            CountryId = 27,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 3,
                            CountryId = 28,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 3,
                            CountryId = 29,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 3,
                            CountryId = 30,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 3,
                            CountryId = 31,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 3,
                            CountryId = 32,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 3,
                            CountryId = 33,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 3,
                            CountryId = 34,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 3,
                            CountryId = 35,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 3,
                            CountryId = 36,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 3,
                            CountryId = 37,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 3,
                            CountryId = 38,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 3,
                            CountryId = 39,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 3,
                            CountryId = 40,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 3,
                            CountryId = 41,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 3,
                            CountryId = 42,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 3,
                            CountryId = 43,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 3,
                            CountryId = 44,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 3,
                            CountryId = 45,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 3,
                            CountryId = 46,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 3,
                            CountryId = 47,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 3,
                            CountryId = 48,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 3,
                            CountryId = 49,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 4,
                            CountryId = 1,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 4,
                            CountryId = 2,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 4,
                            CountryId = 3,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 4,
                            CountryId = 4,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 4,
                            CountryId = 5,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 4,
                            CountryId = 6,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 4,
                            CountryId = 7,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 4,
                            CountryId = 8,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 4,
                            CountryId = 9,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 4,
                            CountryId = 10,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 4,
                            CountryId = 11,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 4,
                            CountryId = 12,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 4,
                            CountryId = 13,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 4,
                            CountryId = 14,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 4,
                            CountryId = 15,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 4,
                            CountryId = 16,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 4,
                            CountryId = 17,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 4,
                            CountryId = 18,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 4,
                            CountryId = 19,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 4,
                            CountryId = 20,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 4,
                            CountryId = 21,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 4,
                            CountryId = 22,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 4,
                            CountryId = 23,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 4,
                            CountryId = 24,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 4,
                            CountryId = 25,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 4,
                            CountryId = 26,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 4,
                            CountryId = 27,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 4,
                            CountryId = 28,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 4,
                            CountryId = 29,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 4,
                            CountryId = 30,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 4,
                            CountryId = 31,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 4,
                            CountryId = 32,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 4,
                            CountryId = 33,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 4,
                            CountryId = 34,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 4,
                            CountryId = 35,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 4,
                            CountryId = 36,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 4,
                            CountryId = 37,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 4,
                            CountryId = 38,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 4,
                            CountryId = 39,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 4,
                            CountryId = 40,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 4,
                            CountryId = 41,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 4,
                            CountryId = 42,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 4,
                            CountryId = 43,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 4,
                            CountryId = 44,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 4,
                            CountryId = 45,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 4,
                            CountryId = 46,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 4,
                            CountryId = 47,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 4,
                            CountryId = 48,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 4,
                            CountryId = 49,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 5,
                            CountryId = 1,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 5,
                            CountryId = 2,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 5,
                            CountryId = 3,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 5,
                            CountryId = 4,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 5,
                            CountryId = 5,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 5,
                            CountryId = 6,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 5,
                            CountryId = 7,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 5,
                            CountryId = 8,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 5,
                            CountryId = 9,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 5,
                            CountryId = 10,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 5,
                            CountryId = 11,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 5,
                            CountryId = 12,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 5,
                            CountryId = 13,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 5,
                            CountryId = 14,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 5,
                            CountryId = 15,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 5,
                            CountryId = 16,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 5,
                            CountryId = 17,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 5,
                            CountryId = 18,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 5,
                            CountryId = 19,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 5,
                            CountryId = 20,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 5,
                            CountryId = 21,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 5,
                            CountryId = 22,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 5,
                            CountryId = 23,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 5,
                            CountryId = 24,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 5,
                            CountryId = 25,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 5,
                            CountryId = 26,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 5,
                            CountryId = 27,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 5,
                            CountryId = 28,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 5,
                            CountryId = 29,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 5,
                            CountryId = 30,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 5,
                            CountryId = 31,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 5,
                            CountryId = 32,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 5,
                            CountryId = 33,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 5,
                            CountryId = 34,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 5,
                            CountryId = 35,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 5,
                            CountryId = 36,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 5,
                            CountryId = 37,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 5,
                            CountryId = 38,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 5,
                            CountryId = 39,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 5,
                            CountryId = 40,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 5,
                            CountryId = 41,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 5,
                            CountryId = 42,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 5,
                            CountryId = 43,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 5,
                            CountryId = 44,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 5,
                            CountryId = 45,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 5,
                            CountryId = 46,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 5,
                            CountryId = 47,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 5,
                            CountryId = 48,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 5,
                            CountryId = 49,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 7,
                            CountryId = 1,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 7,
                            CountryId = 2,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 7,
                            CountryId = 3,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 7,
                            CountryId = 4,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 7,
                            CountryId = 5,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 7,
                            CountryId = 6,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 7,
                            CountryId = 7,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 7,
                            CountryId = 8,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 7,
                            CountryId = 9,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 7,
                            CountryId = 10,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 7,
                            CountryId = 11,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 7,
                            CountryId = 12,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 7,
                            CountryId = 13,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 7,
                            CountryId = 14,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 7,
                            CountryId = 15,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 7,
                            CountryId = 16,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 7,
                            CountryId = 17,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 7,
                            CountryId = 18,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 7,
                            CountryId = 19,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 7,
                            CountryId = 20,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 7,
                            CountryId = 21,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 7,
                            CountryId = 22,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 7,
                            CountryId = 23,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 7,
                            CountryId = 24,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 7,
                            CountryId = 25,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 7,
                            CountryId = 26,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 7,
                            CountryId = 27,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 7,
                            CountryId = 28,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 7,
                            CountryId = 29,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 7,
                            CountryId = 30,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 7,
                            CountryId = 31,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 7,
                            CountryId = 32,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 7,
                            CountryId = 33,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 7,
                            CountryId = 34,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 7,
                            CountryId = 35,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 7,
                            CountryId = 36,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 7,
                            CountryId = 37,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 7,
                            CountryId = 38,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 7,
                            CountryId = 39,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 7,
                            CountryId = 40,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 7,
                            CountryId = 41,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 7,
                            CountryId = 42,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 7,
                            CountryId = 43,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 7,
                            CountryId = 44,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 7,
                            CountryId = 45,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 7,
                            CountryId = 46,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 7,
                            CountryId = 47,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 7,
                            CountryId = 48,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 7,
                            CountryId = 49,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 8,
                            CountryId = 1,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 8,
                            CountryId = 2,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 8,
                            CountryId = 3,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 8,
                            CountryId = 4,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 8,
                            CountryId = 5,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 8,
                            CountryId = 6,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 8,
                            CountryId = 7,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 8,
                            CountryId = 8,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 8,
                            CountryId = 9,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 8,
                            CountryId = 10,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 8,
                            CountryId = 11,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 8,
                            CountryId = 12,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 8,
                            CountryId = 13,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 8,
                            CountryId = 14,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 8,
                            CountryId = 15,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 8,
                            CountryId = 16,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 8,
                            CountryId = 17,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 8,
                            CountryId = 18,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 8,
                            CountryId = 19,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 8,
                            CountryId = 20,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 8,
                            CountryId = 21,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 8,
                            CountryId = 22,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 8,
                            CountryId = 23,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 8,
                            CountryId = 24,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 8,
                            CountryId = 25,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 8,
                            CountryId = 26,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 8,
                            CountryId = 27,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 8,
                            CountryId = 28,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 8,
                            CountryId = 29,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 8,
                            CountryId = 30,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 8,
                            CountryId = 31,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 8,
                            CountryId = 32,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 8,
                            CountryId = 33,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 8,
                            CountryId = 34,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 8,
                            CountryId = 35,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 8,
                            CountryId = 36,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 8,
                            CountryId = 37,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 8,
                            CountryId = 38,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 8,
                            CountryId = 39,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 8,
                            CountryId = 40,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 8,
                            CountryId = 41,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 8,
                            CountryId = 42,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 8,
                            CountryId = 43,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 8,
                            CountryId = 44,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 8,
                            CountryId = 45,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 8,
                            CountryId = 46,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 8,
                            CountryId = 47,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 8,
                            CountryId = 48,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        },
                        new
                        {
                            BranchId = 8,
                            CountryId = 49,
                            DeliveryCost = 5000m,
                            Points = (short)20
                        });
                });

            modelBuilder.Entity("Quqaz.Web.Models.CashMovment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("date");

                    b.Property<string>("Note")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TreasuryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TreasuryId");

                    b.ToTable("CashMovment");
                });

            modelBuilder.Entity("Quqaz.Web.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FirstDate")
                        .HasColumnType("date");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Note")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("CountryId");

                    b.HasIndex("UserId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Quqaz.Web.Models.ClientPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("DestinationName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DestinationPhone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)");

                    b.Property<string>("PrinterName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.ToTable("ClientPayment");
                });

            modelBuilder.Entity("Quqaz.Web.Models.ClientPaymentDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClientNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ClientPaymentId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<decimal>("DeliveryCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("LastTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("MoneyPlace")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderPlace")
                        .HasColumnType("int");

                    b.Property<decimal?>("PayForClient")
                        .HasColumnType("money");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RecipientPhones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClientPaymentId");

                    b.HasIndex("MoneyPlace");

                    b.HasIndex("OrderPlace");

                    b.ToTable("ClientPaymentDetails");
                });

            modelBuilder.Entity("Quqaz.Web.Models.ClientPhone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("clientPhones");
                });

            modelBuilder.Entity("Quqaz.Web.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "خارجي اربيل"
                        },
                        new
                        {
                            Id = 2,
                            Name = "دهوك"
                        },
                        new
                        {
                            Id = 3,
                            Name = "سليمانية"
                        },
                        new
                        {
                            Id = 4,
                            Name = "موصل"
                        },
                        new
                        {
                            Id = 5,
                            Name = "بغداد"
                        },
                        new
                        {
                            Id = 6,
                            Name = "محافظات جنوبية"
                        },
                        new
                        {
                            Id = 7,
                            Name = "كركوك"
                        },
                        new
                        {
                            Id = 8,
                            Name = "اربيل"
                        },
                        new
                        {
                            Id = 9,
                            Name = "خبات"
                        },
                        new
                        {
                            Id = 10,
                            Name = "انبار"
                        },
                        new
                        {
                            Id = 11,
                            Name = "تكريت"
                        },
                        new
                        {
                            Id = 12,
                            Name = "ديالى"
                        },
                        new
                        {
                            Id = 13,
                            Name = "واسط"
                        },
                        new
                        {
                            Id = 14,
                            Name = "نجف"
                        },
                        new
                        {
                            Id = 15,
                            Name = "كربلاء"
                        },
                        new
                        {
                            Id = 16,
                            Name = "ديوانية"
                        },
                        new
                        {
                            Id = 17,
                            Name = "مثنى"
                        },
                        new
                        {
                            Id = 18,
                            Name = "صلاح الدين"
                        },
                        new
                        {
                            Id = 19,
                            Name = "سامراء"
                        },
                        new
                        {
                            Id = 20,
                            Name = "بصره"
                        },
                        new
                        {
                            Id = 21,
                            Name = "عمارة"
                        },
                        new
                        {
                            Id = 22,
                            Name = "ناصرية"
                        },
                        new
                        {
                            Id = 23,
                            Name = "بابل"
                        },
                        new
                        {
                            Id = 24,
                            Name = "كوت"
                        },
                        new
                        {
                            Id = 25,
                            Name = "ذي قار"
                        },
                        new
                        {
                            Id = 26,
                            Name = "ميسان"
                        },
                        new
                        {
                            Id = 27,
                            Name = "سيروان"
                        },
                        new
                        {
                            Id = 28,
                            Name = "مخمور"
                        },
                        new
                        {
                            Id = 29,
                            Name = "مصيف"
                        },
                        new
                        {
                            Id = 30,
                            Name = "سوران"
                        },
                        new
                        {
                            Id = 31,
                            Name = "كوية"
                        },
                        new
                        {
                            Id = 32,
                            Name = "شقلاوة"
                        },
                        new
                        {
                            Id = 33,
                            Name = "ملا عمر"
                        },
                        new
                        {
                            Id = 34,
                            Name = "بارازان"
                        },
                        new
                        {
                            Id = 35,
                            Name = "سلافا ستي"
                        },
                        new
                        {
                            Id = 36,
                            Name = "كوير"
                        },
                        new
                        {
                            Id = 37,
                            Name = "برده رش"
                        },
                        new
                        {
                            Id = 38,
                            Name = "ديانا"
                        },
                        new
                        {
                            Id = 39,
                            Name = "خليفان"
                        },
                        new
                        {
                            Id = 40,
                            Name = "راوندوز"
                        },
                        new
                        {
                            Id = 41,
                            Name = "رانيا"
                        },
                        new
                        {
                            Id = 42,
                            Name = "طق طق"
                        },
                        new
                        {
                            Id = 43,
                            Name = "قلادزي"
                        },
                        new
                        {
                            Id = 44,
                            Name = "كرخ محمد"
                        },
                        new
                        {
                            Id = 45,
                            Name = "عمار بابل"
                        },
                        new
                        {
                            Id = 46,
                            Name = "الرصافة"
                        },
                        new
                        {
                            Id = 47,
                            Name = "كرخ 2"
                        },
                        new
                        {
                            Id = 48,
                            Name = "قوقز فرع بغداد"
                        },
                        new
                        {
                            Id = 49,
                            Name = "سماوة"
                        });
                });

            modelBuilder.Entity("Quqaz.Web.Models.DisAcceptOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("ClientNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<decimal>("DeliveryCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDollar")
                        .HasColumnType("bit");

                    b.Property<string>("RecipientName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RecipientPhones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RegionId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("ClientId");

                    b.HasIndex("CountryId");

                    b.HasIndex("RegionId");

                    b.ToTable("DisAcceptOrder");
                });

            modelBuilder.Entity("Quqaz.Web.Models.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ClientPaymentId")
                        .HasColumnType("int");

                    b.Property<decimal>("Money")
                        .HasColumnType("money");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientPaymentId");

                    b.ToTable("Discount");
                });

            modelBuilder.Entity("Quqaz.Web.Models.Driver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("Quqaz.Web.Models.EditRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool?>("Accept")
                        .HasColumnType("bit");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("NewName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NewUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("ClientId");

                    b.HasIndex("UserId");

                    b.ToTable("EditRequest");
                });

            modelBuilder.Entity("Quqaz.Web.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.ToTable("Group");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BranchId = 4,
                            Name = "مجموعة المدراء"
                        },
                        new
                        {
                            Id = 2,
                            BranchId = 8,
                            Name = "مجموعة المدراء"
                        },
                        new
                        {
                            Id = 3,
                            BranchId = 3,
                            Name = "مجموعة المدراء"
                        },
                        new
                        {
                            Id = 4,
                            BranchId = 5,
                            Name = "مجموعة المدراء"
                        },
                        new
                        {
                            Id = 5,
                            BranchId = 7,
                            Name = "مجموعة المدراء"
                        });
                });

            modelBuilder.Entity("Quqaz.Web.Models.GroupPrivilege", b =>
                {
                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("PrivilegId")
                        .HasColumnType("int");

                    b.HasKey("GroupId", "PrivilegId");

                    b.HasIndex("PrivilegId");

                    b.ToTable("GroupPrivilege");

                    b.HasData(
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 1
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 1
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 1
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 1
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 2
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 2
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 2
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 2
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 3
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 3
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 3
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 3
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 4
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 4
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 4
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 4
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 5
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 5
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 5
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 5
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 6
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 6
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 6
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 6
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 7
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 7
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 7
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 7
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 8
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 8
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 8
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 8
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 9
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 9
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 9
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 9
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 10
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 10
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 10
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 10
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 11
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 11
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 11
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 11
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 12
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 12
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 12
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 12
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 13
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 13
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 13
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 13
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 14
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 14
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 14
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 14
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 15
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 15
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 15
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 15
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 16
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 16
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 16
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 16
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 17
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 17
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 17
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 17
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 18
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 18
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 18
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 18
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 19
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 19
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 19
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 19
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 20
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 20
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 20
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 20
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 21
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 21
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 21
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 21
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 22
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 22
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 22
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 22
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 23
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 23
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 23
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 23
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 24
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 24
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 24
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 24
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 25
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 25
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 25
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 25
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 26
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 26
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 26
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 26
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 27
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 27
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 27
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 27
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 28
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 28
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 28
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 28
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 29
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 29
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 29
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 29
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 30
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 30
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 30
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 30
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 31
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 31
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 31
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 31
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 32
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 32
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 32
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 32
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 33
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 33
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 33
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 33
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 34
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 34
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 34
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 34
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 35
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 35
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 35
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 35
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 36
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 36
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 36
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 36
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 37
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 37
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 37
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 37
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 38
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 38
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 38
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 38
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 39
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 39
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 39
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 39
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 40
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 40
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 40
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 40
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 41
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 41
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 41
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 41
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 42
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 42
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 42
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 42
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 43
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 43
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 43
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 43
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 44
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 44
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 44
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 44
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 45
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 45
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 45
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 45
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 46
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 46
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 46
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 46
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 47
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 47
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 47
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 47
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 48
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 48
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 48
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 48
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 49
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 49
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 49
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 49
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 50
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 50
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 50
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 50
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 51
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 51
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 51
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 51
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 52
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 52
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 52
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 52
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 53
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 53
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 53
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 53
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 54
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 54
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 54
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 54
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 55
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 55
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 55
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 55
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 56
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 56
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 56
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 56
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 57
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 57
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 57
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 57
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 58
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 58
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 58
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 58
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 59
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 59
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 59
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 59
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 60
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 60
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 60
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 60
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 61
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 61
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 61
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 61
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 62
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 62
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 62
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 62
                        },
                        new
                        {
                            GroupId = 1,
                            PrivilegId = 63
                        },
                        new
                        {
                            GroupId = 2,
                            PrivilegId = 63
                        },
                        new
                        {
                            GroupId = 3,
                            PrivilegId = 63
                        },
                        new
                        {
                            GroupId = 4,
                            PrivilegId = 63
                        });
                });

            modelBuilder.Entity("Quqaz.Web.Models.Income", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<decimal>("Earining")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("IncomeTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("IncomeTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Income");
                });

            modelBuilder.Entity("Quqaz.Web.Models.IncomeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("IncomeType");
                });

            modelBuilder.Entity("Quqaz.Web.Models.Market", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("LogoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Market");
                });

            modelBuilder.Entity("Quqaz.Web.Models.MediatorCountry", b =>
                {
                    b.Property<int>("FromCountryId")
                        .HasColumnType("int");

                    b.Property<int>("ToCountryId")
                        .HasColumnType("int");

                    b.Property<int>("MediatorCountryId")
                        .HasColumnType("int");

                    b.HasKey("FromCountryId", "ToCountryId");

                    b.HasIndex("MediatorCountryId");

                    b.HasIndex("ToCountryId");

                    b.ToTable("MediatorCountry");

                    b.HasData(
                        new
                        {
                            FromCountryId = 4,
                            ToCountryId = 10,
                            MediatorCountryId = 5
                        },
                        new
                        {
                            FromCountryId = 4,
                            ToCountryId = 12,
                            MediatorCountryId = 5
                        },
                        new
                        {
                            FromCountryId = 4,
                            ToCountryId = 13,
                            MediatorCountryId = 5
                        },
                        new
                        {
                            FromCountryId = 4,
                            ToCountryId = 14,
                            MediatorCountryId = 5
                        },
                        new
                        {
                            FromCountryId = 4,
                            ToCountryId = 18,
                            MediatorCountryId = 5
                        },
                        new
                        {
                            FromCountryId = 4,
                            ToCountryId = 20,
                            MediatorCountryId = 5
                        },
                        new
                        {
                            FromCountryId = 4,
                            ToCountryId = 23,
                            MediatorCountryId = 5
                        },
                        new
                        {
                            FromCountryId = 4,
                            ToCountryId = 16,
                            MediatorCountryId = 5
                        },
                        new
                        {
                            FromCountryId = 4,
                            ToCountryId = 26,
                            MediatorCountryId = 5
                        },
                        new
                        {
                            FromCountryId = 4,
                            ToCountryId = 22,
                            MediatorCountryId = 5
                        },
                        new
                        {
                            FromCountryId = 4,
                            ToCountryId = 15,
                            MediatorCountryId = 5
                        },
                        new
                        {
                            FromCountryId = 4,
                            ToCountryId = 49,
                            MediatorCountryId = 5
                        },
                        new
                        {
                            FromCountryId = 8,
                            ToCountryId = 10,
                            MediatorCountryId = 5
                        },
                        new
                        {
                            FromCountryId = 8,
                            ToCountryId = 12,
                            MediatorCountryId = 5
                        },
                        new
                        {
                            FromCountryId = 8,
                            ToCountryId = 13,
                            MediatorCountryId = 5
                        },
                        new
                        {
                            FromCountryId = 8,
                            ToCountryId = 14,
                            MediatorCountryId = 5
                        },
                        new
                        {
                            FromCountryId = 8,
                            ToCountryId = 18,
                            MediatorCountryId = 5
                        },
                        new
                        {
                            FromCountryId = 8,
                            ToCountryId = 20,
                            MediatorCountryId = 5
                        },
                        new
                        {
                            FromCountryId = 8,
                            ToCountryId = 23,
                            MediatorCountryId = 5
                        },
                        new
                        {
                            FromCountryId = 8,
                            ToCountryId = 16,
                            MediatorCountryId = 5
                        },
                        new
                        {
                            FromCountryId = 8,
                            ToCountryId = 26,
                            MediatorCountryId = 5
                        },
                        new
                        {
                            FromCountryId = 8,
                            ToCountryId = 22,
                            MediatorCountryId = 5
                        },
                        new
                        {
                            FromCountryId = 8,
                            ToCountryId = 15,
                            MediatorCountryId = 5
                        },
                        new
                        {
                            FromCountryId = 8,
                            ToCountryId = 49,
                            MediatorCountryId = 5
                        },
                        new
                        {
                            FromCountryId = 3,
                            ToCountryId = 10,
                            MediatorCountryId = 5
                        },
                        new
                        {
                            FromCountryId = 3,
                            ToCountryId = 12,
                            MediatorCountryId = 5
                        },
                        new
                        {
                            FromCountryId = 3,
                            ToCountryId = 13,
                            MediatorCountryId = 5
                        },
                        new
                        {
                            FromCountryId = 3,
                            ToCountryId = 14,
                            MediatorCountryId = 5
                        },
                        new
                        {
                            FromCountryId = 3,
                            ToCountryId = 18,
                            MediatorCountryId = 5
                        },
                        new
                        {
                            FromCountryId = 3,
                            ToCountryId = 20,
                            MediatorCountryId = 5
                        },
                        new
                        {
                            FromCountryId = 3,
                            ToCountryId = 23,
                            MediatorCountryId = 5
                        },
                        new
                        {
                            FromCountryId = 3,
                            ToCountryId = 16,
                            MediatorCountryId = 5
                        },
                        new
                        {
                            FromCountryId = 3,
                            ToCountryId = 26,
                            MediatorCountryId = 5
                        },
                        new
                        {
                            FromCountryId = 3,
                            ToCountryId = 22,
                            MediatorCountryId = 5
                        },
                        new
                        {
                            FromCountryId = 3,
                            ToCountryId = 15,
                            MediatorCountryId = 5
                        },
                        new
                        {
                            FromCountryId = 3,
                            ToCountryId = 49,
                            MediatorCountryId = 5
                        },
                        new
                        {
                            FromCountryId = 7,
                            ToCountryId = 1,
                            MediatorCountryId = 8
                        },
                        new
                        {
                            FromCountryId = 7,
                            ToCountryId = 2,
                            MediatorCountryId = 8
                        },
                        new
                        {
                            FromCountryId = 7,
                            ToCountryId = 6,
                            MediatorCountryId = 8
                        },
                        new
                        {
                            FromCountryId = 7,
                            ToCountryId = 9,
                            MediatorCountryId = 8
                        },
                        new
                        {
                            FromCountryId = 7,
                            ToCountryId = 10,
                            MediatorCountryId = 8
                        },
                        new
                        {
                            FromCountryId = 7,
                            ToCountryId = 11,
                            MediatorCountryId = 8
                        },
                        new
                        {
                            FromCountryId = 7,
                            ToCountryId = 12,
                            MediatorCountryId = 8
                        },
                        new
                        {
                            FromCountryId = 7,
                            ToCountryId = 13,
                            MediatorCountryId = 8
                        },
                        new
                        {
                            FromCountryId = 7,
                            ToCountryId = 14,
                            MediatorCountryId = 8
                        },
                        new
                        {
                            FromCountryId = 7,
                            ToCountryId = 15,
                            MediatorCountryId = 8
                        },
                        new
                        {
                            FromCountryId = 7,
                            ToCountryId = 16,
                            MediatorCountryId = 8
                        },
                        new
                        {
                            FromCountryId = 7,
                            ToCountryId = 17,
                            MediatorCountryId = 8
                        },
                        new
                        {
                            FromCountryId = 7,
                            ToCountryId = 18,
                            MediatorCountryId = 8
                        },
                        new
                        {
                            FromCountryId = 7,
                            ToCountryId = 19,
                            MediatorCountryId = 8
                        },
                        new
                        {
                            FromCountryId = 7,
                            ToCountryId = 20,
                            MediatorCountryId = 8
                        },
                        new
                        {
                            FromCountryId = 7,
                            ToCountryId = 21,
                            MediatorCountryId = 8
                        },
                        new
                        {
                            FromCountryId = 7,
                            ToCountryId = 22,
                            MediatorCountryId = 8
                        },
                        new
                        {
                            FromCountryId = 7,
                            ToCountryId = 23,
                            MediatorCountryId = 8
                        },
                        new
                        {
                            FromCountryId = 7,
                            ToCountryId = 24,
                            MediatorCountryId = 8
                        },
                        new
                        {
                            FromCountryId = 7,
                            ToCountryId = 25,
                            MediatorCountryId = 8
                        },
                        new
                        {
                            FromCountryId = 7,
                            ToCountryId = 26,
                            MediatorCountryId = 8
                        },
                        new
                        {
                            FromCountryId = 7,
                            ToCountryId = 27,
                            MediatorCountryId = 8
                        },
                        new
                        {
                            FromCountryId = 7,
                            ToCountryId = 28,
                            MediatorCountryId = 8
                        },
                        new
                        {
                            FromCountryId = 7,
                            ToCountryId = 29,
                            MediatorCountryId = 8
                        },
                        new
                        {
                            FromCountryId = 7,
                            ToCountryId = 30,
                            MediatorCountryId = 8
                        },
                        new
                        {
                            FromCountryId = 7,
                            ToCountryId = 31,
                            MediatorCountryId = 8
                        },
                        new
                        {
                            FromCountryId = 7,
                            ToCountryId = 32,
                            MediatorCountryId = 8
                        },
                        new
                        {
                            FromCountryId = 7,
                            ToCountryId = 33,
                            MediatorCountryId = 8
                        },
                        new
                        {
                            FromCountryId = 7,
                            ToCountryId = 34,
                            MediatorCountryId = 8
                        },
                        new
                        {
                            FromCountryId = 7,
                            ToCountryId = 35,
                            MediatorCountryId = 8
                        },
                        new
                        {
                            FromCountryId = 7,
                            ToCountryId = 36,
                            MediatorCountryId = 8
                        },
                        new
                        {
                            FromCountryId = 7,
                            ToCountryId = 37,
                            MediatorCountryId = 8
                        },
                        new
                        {
                            FromCountryId = 7,
                            ToCountryId = 38,
                            MediatorCountryId = 8
                        },
                        new
                        {
                            FromCountryId = 7,
                            ToCountryId = 39,
                            MediatorCountryId = 8
                        },
                        new
                        {
                            FromCountryId = 7,
                            ToCountryId = 40,
                            MediatorCountryId = 8
                        },
                        new
                        {
                            FromCountryId = 7,
                            ToCountryId = 41,
                            MediatorCountryId = 8
                        },
                        new
                        {
                            FromCountryId = 7,
                            ToCountryId = 42,
                            MediatorCountryId = 8
                        },
                        new
                        {
                            FromCountryId = 7,
                            ToCountryId = 43,
                            MediatorCountryId = 8
                        },
                        new
                        {
                            FromCountryId = 7,
                            ToCountryId = 44,
                            MediatorCountryId = 8
                        },
                        new
                        {
                            FromCountryId = 7,
                            ToCountryId = 45,
                            MediatorCountryId = 8
                        },
                        new
                        {
                            FromCountryId = 7,
                            ToCountryId = 46,
                            MediatorCountryId = 8
                        },
                        new
                        {
                            FromCountryId = 7,
                            ToCountryId = 47,
                            MediatorCountryId = 8
                        },
                        new
                        {
                            FromCountryId = 7,
                            ToCountryId = 48,
                            MediatorCountryId = 8
                        },
                        new
                        {
                            FromCountryId = 7,
                            ToCountryId = 49,
                            MediatorCountryId = 8
                        });
                });

            modelBuilder.Entity("Quqaz.Web.Models.Notfication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsSeen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("MoneyPlace")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderCount")
                        .HasColumnType("int");

                    b.Property<int?>("OrderPlace")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Notfication");
                });

            modelBuilder.Entity("Quqaz.Web.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("AgentCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("AgentId")
                        .HasColumnType("int");

                    b.Property<int>("AgentRequestStatus")
                        .HasColumnType("int");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("ClientNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ClientPaied")
                        .HasColumnType("money");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CurrentBranchId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<decimal>("DeliveryCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("DiliveryDate")
                        .HasColumnType("date");

                    b.Property<bool>("InWayToBranch")
                        .HasColumnType("bit");

                    b.Property<bool>("IsClientDiliverdMoney")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDollar")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReturnedByBranch")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSend")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSync")
                        .HasColumnType("bit");

                    b.Property<int>("MoneyPlace")
                        .HasColumnType("int");

                    b.Property<bool?>("NegativeAlert")
                        .HasColumnType("bit");

                    b.Property<decimal?>("NewCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("NewOrderPlace")
                        .HasColumnType("int");

                    b.Property<int?>("NextBranchId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("OldCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OldDeliveryCost")
                        .HasColumnType("money");

                    b.Property<int>("OrderPlace")
                        .HasColumnType("int");

                    b.Property<int>("OrderState")
                        .HasColumnType("int");

                    b.Property<int>("PrintedTimes")
                        .HasColumnType("int");

                    b.Property<string>("RecipientName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RecipientPhones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RegionId")
                        .HasColumnType("int");

                    b.Property<bool?>("Seen")
                        .HasColumnType("bit")
                        .HasColumnName("seen");

                    b.Property<string>("SystemNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TargetBranchId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("AgentId");

                    b.HasIndex("BranchId");

                    b.HasIndex("ClientId");

                    b.HasIndex("CountryId");

                    b.HasIndex("CurrentBranchId");

                    b.HasIndex("MoneyPlace");

                    b.HasIndex("NextBranchId");

                    b.HasIndex("OrderPlace");

                    b.HasIndex("OrderState");

                    b.HasIndex("RegionId");

                    b.HasIndex("TargetBranchId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("Quqaz.Web.Models.OrderClientPaymnet", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ClientPaymentId")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "ClientPaymentId")
                        .HasName("Pk_OrderClientPaymnet");

                    b.HasIndex("ClientPaymentId");

                    b.ToTable("OrderClientPaymnet");
                });

            modelBuilder.Entity("Quqaz.Web.Models.OrderFromExcel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("date");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("RecipientName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("OrderFromExcel");
                });

            modelBuilder.Entity("Quqaz.Web.Models.OrderItem", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("OrderTpyeId")
                        .HasColumnType("int");

                    b.Property<float?>("Count")
                        .HasColumnType("real");

                    b.HasKey("OrderId", "OrderTpyeId")
                        .HasName("PK_OrderOrderType");

                    b.HasIndex("OrderTpyeId");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("Quqaz.Web.Models.OrderLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("AgentCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("AgentId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("ClientNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<decimal>("DeliveryCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("DiliveryDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsClientDiliverdMoney")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDollar")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSync")
                        .HasColumnType("bit");

                    b.Property<int>("MoneyPalce")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("OldCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("OrderPlace")
                        .HasColumnType("int");

                    b.Property<int>("OrderState")
                        .HasColumnType("int");

                    b.Property<string>("RecipientName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RecipientPhones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RegionId")
                        .HasColumnType("int");

                    b.Property<bool?>("Seen")
                        .HasColumnType("bit")
                        .HasColumnName("seen");

                    b.Property<string>("SystemNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("AgentId");

                    b.HasIndex("ClientId");

                    b.HasIndex("CountryId");

                    b.HasIndex("OrderId");

                    b.HasIndex("RegionId");

                    b.ToTable("OrderLog");
                });

            modelBuilder.Entity("Quqaz.Web.Models.OrderType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.ToTable("OrderType");
                });

            modelBuilder.Entity("Quqaz.Web.Models.OutCome", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OutComeTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("OutComeTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("OutCome");
                });

            modelBuilder.Entity("Quqaz.Web.Models.OutComeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("OutComeType");
                });

            modelBuilder.Entity("Quqaz.Web.Models.PaymentRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool?>("Accept")
                        .HasColumnType("bit");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("date");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentWayId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("ClientId");

                    b.HasIndex("PaymentWayId");

                    b.ToTable("PaymentRequest");
                });

            modelBuilder.Entity("Quqaz.Web.Models.PaymentWay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.ToTable("PaymentWay");
                });

            modelBuilder.Entity("Quqaz.Web.Models.PointsSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<decimal>("Money")
                        .HasColumnType("money");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex(new[] { "Points" }, "UQ__PointsSe__DA826786C9B4659A")
                        .IsUnique();

                    b.HasIndex(new[] { "Money" }, "UQ__PointsSe__FA951B46C519FCD7")
                        .IsUnique();

                    b.ToTable("PointsSetting");
                });

            modelBuilder.Entity("Quqaz.Web.Models.Privilege", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SysName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Privilege");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "عرض المجموعات",
                            SysName = "ShowGroup"
                        },
                        new
                        {
                            Id = 2,
                            Name = "إضافة مجموعات",
                            SysName = "AddGroup"
                        },
                        new
                        {
                            Id = 3,
                            Name = "التعديل على المجموعات",
                            SysName = "EditGroup"
                        },
                        new
                        {
                            Id = 4,
                            Name = "حذف مجموعات",
                            SysName = "DeleteGroup"
                        },
                        new
                        {
                            Id = 5,
                            Name = "عرض الموظفين",
                            SysName = "ShowUser"
                        },
                        new
                        {
                            Id = 6,
                            Name = "إضافة موظفين",
                            SysName = "AddUser"
                        },
                        new
                        {
                            Id = 7,
                            Name = "تعديل الموظفين",
                            SysName = "EditUser"
                        },
                        new
                        {
                            Id = 8,
                            Name = "حذف موظفين",
                            SysName = "DeleteUser"
                        },
                        new
                        {
                            Id = 9,
                            Name = "عرض انواع الطلبات",
                            SysName = "ShowOrderType"
                        },
                        new
                        {
                            Id = 10,
                            Name = "إضافة انواع الطلبات",
                            SysName = "AddOrderType"
                        },
                        new
                        {
                            Id = 11,
                            Name = "تعديل انواع الطلبات",
                            SysName = "EditOrderType"
                        },
                        new
                        {
                            Id = 12,
                            Name = "حذف انواع الطلبات",
                            SysName = "DeleteOrderType"
                        },
                        new
                        {
                            Id = 13,
                            Name = "عرض المدن",
                            SysName = "ShowCountry"
                        },
                        new
                        {
                            Id = 14,
                            Name = "إضافة المدن",
                            SysName = "AddCountry"
                        },
                        new
                        {
                            Id = 15,
                            Name = "تعديل المدن",
                            SysName = "EditCountry"
                        },
                        new
                        {
                            Id = 16,
                            Name = "حذف المدن",
                            SysName = "DeleteCountry"
                        },
                        new
                        {
                            Id = 17,
                            Name = "إضافة منطقة",
                            SysName = "AddRegion"
                        },
                        new
                        {
                            Id = 18,
                            Name = "تعديل منطقة",
                            SysName = "EditRegion"
                        },
                        new
                        {
                            Id = 19,
                            Name = "عرض المناطق",
                            SysName = "ShowRegion"
                        },
                        new
                        {
                            Id = 20,
                            Name = "حذف منقطة",
                            SysName = "DeleteRegion"
                        },
                        new
                        {
                            Id = 21,
                            Name = "إضافة عملاء",
                            SysName = "AddClient"
                        },
                        new
                        {
                            Id = 22,
                            Name = "عرض العملاء",
                            SysName = "ShowClient"
                        },
                        new
                        {
                            Id = 23,
                            Name = "تعديل العملاء",
                            SysName = "UpdateClient"
                        },
                        new
                        {
                            Id = 24,
                            Name = "حذف العملاء",
                            SysName = "DeleteClient"
                        },
                        new
                        {
                            Id = 25,
                            Name = "عرض العملات",
                            SysName = "ShowCurrency"
                        },
                        new
                        {
                            Id = 26,
                            Name = "إضافة عملات",
                            SysName = "AddCurrency"
                        },
                        new
                        {
                            Id = 27,
                            Name = "تعديل العملات",
                            SysName = "UpdateCurrency"
                        },
                        new
                        {
                            Id = 28,
                            Name = "حذف العملات",
                            SysName = "DeleteCurrency"
                        },
                        new
                        {
                            Id = 29,
                            Name = "عرض الأقسام",
                            SysName = "ShowDepartment"
                        },
                        new
                        {
                            Id = 30,
                            Name = "إضافة قسم",
                            SysName = "AddDepartment"
                        },
                        new
                        {
                            Id = 31,
                            Name = "تعديل قسم",
                            SysName = "UpdateDepartment"
                        },
                        new
                        {
                            Id = 32,
                            Name = "عرض انواع الواردات",
                            SysName = "ShowIncomeType"
                        },
                        new
                        {
                            Id = 33,
                            Name = "إضافة انواع الواردات",
                            SysName = "AddIncomeType"
                        },
                        new
                        {
                            Id = 34,
                            Name = "تعديل انواع الواردات",
                            SysName = "UpdateIncomeType"
                        },
                        new
                        {
                            Id = 35,
                            Name = "حذف انواع الواردات",
                            SysName = "DeleteIncomeType"
                        },
                        new
                        {
                            Id = 36,
                            Name = "عرض انواع الصادرات",
                            SysName = "ShowOutComeType"
                        },
                        new
                        {
                            Id = 37,
                            Name = "إضافة انواع الصادرات",
                            SysName = "AddOutComeType"
                        },
                        new
                        {
                            Id = 38,
                            Name = "تعديل انواع الصادرات",
                            SysName = "UpdateOutComeType"
                        },
                        new
                        {
                            Id = 39,
                            Name = "حذف انواع الصادرات",
                            SysName = "DeleteOutComeType"
                        },
                        new
                        {
                            Id = 40,
                            Name = "إضافة طلبات",
                            SysName = "AddOrder"
                        },
                        new
                        {
                            Id = 41,
                            Name = "تعديل الطلبات",
                            SysName = "UpdateOrder"
                        },
                        new
                        {
                            Id = 42,
                            Name = "حذف الطلبات",
                            SysName = "DeleteOrder"
                        },
                        new
                        {
                            Id = 43,
                            Name = "عرض الطلبات",
                            SysName = "ShowOrder"
                        },
                        new
                        {
                            Id = 44,
                            Name = "اضافة صادرات",
                            SysName = "AddOutCome"
                        },
                        new
                        {
                            Id = 45,
                            Name = "عرض الصادرات",
                            SysName = "ShowOutCome"
                        },
                        new
                        {
                            Id = 46,
                            Name = "تعديل الصادرات",
                            SysName = "UpdateOutCome"
                        },
                        new
                        {
                            Id = 47,
                            Name = "حذف الصادرات",
                            SysName = "DeleteOutCome"
                        },
                        new
                        {
                            Id = 48,
                            Name = "إضافة واردات",
                            SysName = "AddIncome"
                        },
                        new
                        {
                            Id = 49,
                            Name = "عرض الواردات",
                            SysName = "ShowIncome"
                        },
                        new
                        {
                            Id = 50,
                            Name = "تعديل الواردات",
                            SysName = "UpdateIncome"
                        },
                        new
                        {
                            Id = 51,
                            Name = "حذف الواردات",
                            SysName = "DeleteIncome"
                        },
                        new
                        {
                            Id = 52,
                            Name = "عرض التقارير",
                            SysName = "ShowReports"
                        },
                        new
                        {
                            Id = 53,
                            Name = "طباعة عميل",
                            SysName = "PrintClient"
                        },
                        new
                        {
                            Id = 54,
                            Name = "طباعة مندوب",
                            SysName = "PrintAgent"
                        },
                        new
                        {
                            Id = 55,
                            Name = "تسديد",
                            SysName = "Pay"
                        },
                        new
                        {
                            Id = 56,
                            Name = "إدارة الصناديق",
                            SysName = "TreasuryManagment"
                        },
                        new
                        {
                            Id = 57,
                            Name = "استلام الشحنات المسلمة",
                            SysName = "ReceiptOfTheStatusOfTheDeliveredShipment"
                        },
                        new
                        {
                            Id = 58,
                            Name = "استلام الشحنات المرتجعة",
                            SysName = "ReceiptOfTheStatusOfTheReturnedShipment"
                        },
                        new
                        {
                            Id = 59,
                            Name = "تسديد في الطريق",
                            SysName = "PayInWay"
                        },
                        new
                        {
                            Id = 60,
                            Name = "تسديد مرتجع كلي",
                            SysName = "PayCompletelyReturned"
                        },
                        new
                        {
                            Id = 61,
                            Name = "تسديد مرتجع جزئي",
                            SysName = "PayPartialReturned"
                        },
                        new
                        {
                            Id = 62,
                            Name = "تسديد تم الستليم",
                            SysName = "PayDelivered"
                        },
                        new
                        {
                            Id = 63,
                            Name = "تسديد المرفوض",
                            SysName = "PayUnacceptable"
                        });
                });

            modelBuilder.Entity("Quqaz.Web.Models.Receipt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("About")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int?>("ClientPaymentId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<bool>("IsPay")
                        .HasColumnType("bit");

                    b.Property<string>("Manager")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("ClientId");

                    b.HasIndex("ClientPaymentId");

                    b.ToTable("Receipt");
                });

            modelBuilder.Entity("Quqaz.Web.Models.ReceiptOfTheOrderStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<int>("RecvierId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecvierId");

                    b.ToTable("ReceiptOfTheOrderStatus");
                });

            modelBuilder.Entity("Quqaz.Web.Models.ReceiptOfTheOrderStatusDetali", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("AgentCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("AgentId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MoneyPalce")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("OldCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("OrderCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("OrderPlace")
                        .HasColumnType("int");

                    b.Property<int>("OrderState")
                        .HasColumnType("int");

                    b.Property<int>("ReceiptOfTheOrderStatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AgentId");

                    b.HasIndex("ClientId");

                    b.HasIndex("MoneyPalce");

                    b.HasIndex("OrderId");

                    b.HasIndex("OrderPlace");

                    b.HasIndex("OrderState");

                    b.HasIndex("ReceiptOfTheOrderStatusId");

                    b.ToTable("ReceiptOfTheOrderStatusDetalis");
                });

            modelBuilder.Entity("Quqaz.Web.Models.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Region");
                });

            modelBuilder.Entity("Quqaz.Web.Models.SendOrdersReturnedToMainBranchModels.SendOrdersReturnedToMainBranchDetali", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DeliveryCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SendOrdersReturnedToMainBranchReportId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SendOrdersReturnedToMainBranchReportId");

                    b.ToTable("SendOrdersReturnedToMainBranchDetali");
                });

            modelBuilder.Entity("Quqaz.Web.Models.SendOrdersReturnedToMainBranchModels.SendOrdersReturnedToMainBranchReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("DriverId")
                        .HasColumnType("int");

                    b.Property<int>("MainBranchId")
                        .HasColumnType("int");

                    b.Property<string>("PrinterName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("DriverId");

                    b.HasIndex("MainBranchId");

                    b.ToTable("SendOrdersReturnedToMainBranchReports");
                });

            modelBuilder.Entity("Quqaz.Web.Models.TransferToBranchModels.TransferToOtherBranch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("DestinationBranchId")
                        .HasColumnType("int");

                    b.Property<int>("DriverId")
                        .HasColumnType("int");

                    b.Property<string>("PrinterName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SourceBranchId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DestinationBranchId");

                    b.HasIndex("DriverId");

                    b.HasIndex("SourceBranchId");

                    b.ToTable("TransferToOtherBranches");
                });

            modelBuilder.Entity("Quqaz.Web.Models.TransferToBranchModels.TransferToOtherBranchDetials", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TransferToOtherBranchId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TransferToOtherBranchId");

                    b.ToTable("TransferToOtherBranchDetials");
                });

            modelBuilder.Entity("Quqaz.Web.Models.Treasury", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateOnUtc")
                        .HasColumnType("date");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Treasury");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateOnUtc = new DateTime(2019, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Total = 0m
                        });
                });

            modelBuilder.Entity("Quqaz.Web.Models.TreasuryHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CashMovmentId")
                        .HasColumnType("int");

                    b.Property<int?>("ClientPaymentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("date");

                    b.Property<int?>("IncomeId")
                        .HasColumnType("int");

                    b.Property<int?>("OutcomeId")
                        .HasColumnType("int");

                    b.Property<int?>("ReceiptId")
                        .HasColumnType("int");

                    b.Property<int?>("ReceiptOfTheOrderStatusId")
                        .HasColumnType("int");

                    b.Property<int>("TreasuryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CashMovmentId");

                    b.HasIndex("ClientPaymentId");

                    b.HasIndex("IncomeId");

                    b.HasIndex("OutcomeId");

                    b.HasIndex("ReceiptId");

                    b.HasIndex("ReceiptOfTheOrderStatusId");

                    b.HasIndex("TreasuryId");

                    b.ToTable("TreasuryHistory");
                });

            modelBuilder.Entity("Quqaz.Web.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<bool>("CanWorkAsAgent")
                        .HasColumnType("bit");

                    b.Property<string>("Experince")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CanWorkAsAgent = false,
                            HireDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "admin",
                            Password = "21232f297a57a5a743894a0e4a801fc3",
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("Quqaz.Web.Models.UserBranch", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "BranchId");

                    b.HasIndex("BranchId");

                    b.ToTable("UserBranch");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            BranchId = 4
                        },
                        new
                        {
                            UserId = 1,
                            BranchId = 8
                        },
                        new
                        {
                            UserId = 1,
                            BranchId = 3
                        },
                        new
                        {
                            UserId = 1,
                            BranchId = 5
                        },
                        new
                        {
                            UserId = 1,
                            BranchId = 7
                        });
                });

            modelBuilder.Entity("Quqaz.Web.Models.UserGroup", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("UserGroup");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            GroupId = 1
                        },
                        new
                        {
                            UserId = 1,
                            GroupId = 2
                        },
                        new
                        {
                            UserId = 1,
                            GroupId = 3
                        },
                        new
                        {
                            UserId = 1,
                            GroupId = 4
                        });
                });

            modelBuilder.Entity("Quqaz.Web.Models.UserPhone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserPhone");
                });

            modelBuilder.Entity("Quqaz.Web.Models.AgentCountry", b =>
                {
                    b.HasOne("Quqaz.Web.Models.User", "Agent")
                        .WithMany("AgentCountries")
                        .HasForeignKey("AgentId")
                        .HasConstraintName("FK_AgentCountr_Users")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Quqaz.Web.Models.Country", "Country")
                        .WithMany("AgentCountries")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_AgentCountr_Country")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agent");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Quqaz.Web.Models.AgentOrderPrint", b =>
                {
                    b.HasOne("Quqaz.Web.Models.AgentPrint", "AgentPrint")
                        .WithMany("AgentOrderPrints")
                        .HasForeignKey("AgentPrintId")
                        .HasConstraintName("FK__AgentOrde__Agent__07C12930")
                        .IsRequired();

                    b.HasOne("Quqaz.Web.Models.Order", "Order")
                        .WithMany("AgentOrderPrints")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__AgentOrde__Order__08B54D69")
                        .IsRequired();

                    b.Navigation("AgentPrint");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Quqaz.Web.Models.AgentPrint", b =>
                {
                    b.HasOne("Quqaz.Web.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Quqaz.Web.Models.Driver", "Driver")
                        .WithMany()
                        .HasForeignKey("DriverId");

                    b.Navigation("Branch");

                    b.Navigation("Driver");
                });

            modelBuilder.Entity("Quqaz.Web.Models.AgentPrintDetail", b =>
                {
                    b.HasOne("Quqaz.Web.Models.AgentPrint", "AgentPrint")
                        .WithMany("AgentPrintDetails")
                        .HasForeignKey("AgentPrintId")
                        .HasConstraintName("FK__AgentPrin__Agent__09A971A2")
                        .IsRequired();

                    b.Navigation("AgentPrint");
                });

            modelBuilder.Entity("Quqaz.Web.Models.Branch", b =>
                {
                    b.HasOne("Quqaz.Web.Models.Country", "Country")
                        .WithOne("Branch")
                        .HasForeignKey("Quqaz.Web.Models.Branch", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Quqaz.Web.Models.BranchToCountryDeliverryCost", b =>
                {
                    b.HasOne("Quqaz.Web.Models.Branch", "Branch")
                        .WithMany("BranchToCountryDeliverryCosts")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Quqaz.Web.Models.Country", "Country")
                        .WithMany("BranchToCountryDeliverryCosts")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Quqaz.Web.Models.CashMovment", b =>
                {
                    b.HasOne("Quqaz.Web.Models.Treasury", "Treasury")
                        .WithMany("CashMovments")
                        .HasForeignKey("TreasuryId")
                        .HasConstraintName("FK__CashMovme__Treas__1975C517")
                        .IsRequired();

                    b.Navigation("Treasury");
                });

            modelBuilder.Entity("Quqaz.Web.Models.Client", b =>
                {
                    b.HasOne("Quqaz.Web.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Quqaz.Web.Models.Country", "Country")
                        .WithMany("Clients")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_Clients_Country");

                    b.HasOne("Quqaz.Web.Models.User", "User")
                        .WithMany("Clients")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Clients_Users")
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Country");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Quqaz.Web.Models.ClientPayment", b =>
                {
                    b.HasOne("Quqaz.Web.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("Quqaz.Web.Models.ClientPaymentDetail", b =>
                {
                    b.HasOne("Quqaz.Web.Models.ClientPayment", "ClientPayment")
                        .WithMany("ClientPaymentDetails")
                        .HasForeignKey("ClientPaymentId")
                        .HasConstraintName("FK__ClientPay__Clien__51300E55");

                    b.Navigation("ClientPayment");
                });

            modelBuilder.Entity("Quqaz.Web.Models.ClientPhone", b =>
                {
                    b.HasOne("Quqaz.Web.Models.Client", "Client")
                        .WithMany("ClientPhones")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("FK_clientPhones_Clients")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Quqaz.Web.Models.DisAcceptOrder", b =>
                {
                    b.HasOne("Quqaz.Web.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Quqaz.Web.Models.Client", "Client")
                        .WithMany("DisAcceptOrders")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("FK__DisAccept__Clien__151B244E")
                        .IsRequired();

                    b.HasOne("Quqaz.Web.Models.Country", "Country")
                        .WithMany("DisAcceptOrders")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK__DisAccept__Count__0D7A0286")
                        .IsRequired();

                    b.HasOne("Quqaz.Web.Models.Region", "Region")
                        .WithMany("DisAcceptOrders")
                        .HasForeignKey("RegionId")
                        .HasConstraintName("FK__DisAccept__Regio__17036CC0");

                    b.Navigation("Branch");

                    b.Navigation("Client");

                    b.Navigation("Country");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("Quqaz.Web.Models.Discount", b =>
                {
                    b.HasOne("Quqaz.Web.Models.ClientPayment", "ClientPayment")
                        .WithMany("Discounts")
                        .HasForeignKey("ClientPaymentId")
                        .HasConstraintName("FK__Discount__Client__56E8E7AB");

                    b.Navigation("ClientPayment");
                });

            modelBuilder.Entity("Quqaz.Web.Models.EditRequest", b =>
                {
                    b.HasOne("Quqaz.Web.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Quqaz.Web.Models.Client", "Client")
                        .WithMany("EditRequests")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("FK__EditReque__Clien__18EBB532")
                        .IsRequired();

                    b.HasOne("Quqaz.Web.Models.User", "User")
                        .WithMany("EditRequests")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__EditReque__UserI__19DFD96B");

                    b.Navigation("Branch");

                    b.Navigation("Client");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Quqaz.Web.Models.Group", b =>
                {
                    b.HasOne("Quqaz.Web.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("Quqaz.Web.Models.GroupPrivilege", b =>
                {
                    b.HasOne("Quqaz.Web.Models.Group", "Group")
                        .WithMany("GroupPrivileges")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK_GroupPrivilege_Group")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Quqaz.Web.Models.Privilege", "Privileg")
                        .WithMany("GroupPrivileges")
                        .HasForeignKey("PrivilegId")
                        .HasConstraintName("FK_GroupPrivilege_Privilege")
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Privileg");
                });

            modelBuilder.Entity("Quqaz.Web.Models.Income", b =>
                {
                    b.HasOne("Quqaz.Web.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Quqaz.Web.Models.IncomeType", "IncomeType")
                        .WithMany("Incomes")
                        .HasForeignKey("IncomeTypeId")
                        .HasConstraintName("FK_Income_IncomeType")
                        .IsRequired();

                    b.HasOne("Quqaz.Web.Models.User", "User")
                        .WithMany("Incomes")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Income_Users")
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("IncomeType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Quqaz.Web.Models.Market", b =>
                {
                    b.HasOne("Quqaz.Web.Models.Client", "Client")
                        .WithMany("Markets")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("FK__Market__ClientId__1EA48E88");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Quqaz.Web.Models.MediatorCountry", b =>
                {
                    b.HasOne("Quqaz.Web.Models.Country", "FromCountry")
                        .WithMany("FromCountries")
                        .HasForeignKey("FromCountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Quqaz.Web.Models.Country", "MidCountry")
                        .WithMany("MediatorCountries")
                        .HasForeignKey("MediatorCountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Quqaz.Web.Models.Country", "ToCountry")
                        .WithMany("ToCountries")
                        .HasForeignKey("ToCountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FromCountry");

                    b.Navigation("MidCountry");

                    b.Navigation("ToCountry");
                });

            modelBuilder.Entity("Quqaz.Web.Models.Notfication", b =>
                {
                    b.HasOne("Quqaz.Web.Models.Client", "Client")
                        .WithMany("Notfications")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("FK__Notficati__Clien__1F98B2C1")
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Quqaz.Web.Models.Order", b =>
                {
                    b.HasOne("Quqaz.Web.Models.User", "Agent")
                        .WithMany("Orders")
                        .HasForeignKey("AgentId")
                        .HasConstraintName("FK_Order_Users");

                    b.HasOne("Quqaz.Web.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Quqaz.Web.Models.Client", "Client")
                        .WithMany("Orders")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("FK_Order_Clients")
                        .IsRequired();

                    b.HasOne("Quqaz.Web.Models.Country", "Country")
                        .WithMany("OrderCountries")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_Order_Country")
                        .IsRequired();

                    b.HasOne("Quqaz.Web.Models.Branch", "CurrentBranch")
                        .WithMany()
                        .HasForeignKey("CurrentBranchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Quqaz.Web.Models.Branch", "NextBranch")
                        .WithMany()
                        .HasForeignKey("NextBranchId");

                    b.HasOne("Quqaz.Web.Models.Region", "Region")
                        .WithMany("Orders")
                        .HasForeignKey("RegionId")
                        .HasConstraintName("FK_Order_Region");

                    b.HasOne("Quqaz.Web.Models.Branch", "TargetBranch")
                        .WithMany()
                        .HasForeignKey("TargetBranchId");

                    b.Navigation("Agent");

                    b.Navigation("Branch");

                    b.Navigation("Client");

                    b.Navigation("Country");

                    b.Navigation("CurrentBranch");

                    b.Navigation("NextBranch");

                    b.Navigation("Region");

                    b.Navigation("TargetBranch");
                });

            modelBuilder.Entity("Quqaz.Web.Models.OrderClientPaymnet", b =>
                {
                    b.HasOne("Quqaz.Web.Models.ClientPayment", "ClientPayment")
                        .WithMany("OrderClientPaymnets")
                        .HasForeignKey("ClientPaymentId")
                        .HasConstraintName("FK__OrderClie__Clien__55F4C372")
                        .IsRequired();

                    b.HasOne("Quqaz.Web.Models.Order", "Order")
                        .WithMany("OrderClientPaymnets")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__OrderClie__Order__55009F39")
                        .IsRequired();

                    b.Navigation("ClientPayment");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Quqaz.Web.Models.OrderFromExcel", b =>
                {
                    b.HasOne("Quqaz.Web.Models.Client", "Client")
                        .WithMany("OrderFromExcels")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("FK__OrderFrom__Clien__2A164134")
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Quqaz.Web.Models.OrderItem", b =>
                {
                    b.HasOne("Quqaz.Web.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK_OrderOrderType_Order")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Quqaz.Web.Models.OrderType", "OrderTpye")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderTpyeId")
                        .HasConstraintName("FK_OrderOrderType_OrderType")
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("OrderTpye");
                });

            modelBuilder.Entity("Quqaz.Web.Models.OrderLog", b =>
                {
                    b.HasOne("Quqaz.Web.Models.User", "Agent")
                        .WithMany("OrderLogs")
                        .HasForeignKey("AgentId")
                        .HasConstraintName("FK_OrderLog_Users");

                    b.HasOne("Quqaz.Web.Models.Client", "Client")
                        .WithMany("OrderLogs")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("FK_OrderLog_Clients")
                        .IsRequired();

                    b.HasOne("Quqaz.Web.Models.Country", "Country")
                        .WithMany("OrderLogs")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_OrderLog_Country")
                        .IsRequired();

                    b.HasOne("Quqaz.Web.Models.Order", "Order")
                        .WithMany("OrderLogs")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK_OrderLog_Order")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Quqaz.Web.Models.Region", "Region")
                        .WithMany("OrderLogs")
                        .HasForeignKey("RegionId")
                        .HasConstraintName("FK_OrderLog_Region");

                    b.Navigation("Agent");

                    b.Navigation("Client");

                    b.Navigation("Country");

                    b.Navigation("Order");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("Quqaz.Web.Models.OrderType", b =>
                {
                    b.HasOne("Quqaz.Web.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("Quqaz.Web.Models.OutCome", b =>
                {
                    b.HasOne("Quqaz.Web.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Quqaz.Web.Models.OutComeType", "OutComeType")
                        .WithMany("OutComes")
                        .HasForeignKey("OutComeTypeId")
                        .HasConstraintName("FK_OutCome_OutComeType")
                        .IsRequired();

                    b.HasOne("Quqaz.Web.Models.User", "User")
                        .WithMany("OutComes")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_OutCome_Users")
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("OutComeType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Quqaz.Web.Models.PaymentRequest", b =>
                {
                    b.HasOne("Quqaz.Web.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Quqaz.Web.Models.Client", "Client")
                        .WithMany("PaymentRequests")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("FK__PaymentRe__Clien__5AB9788F")
                        .IsRequired();

                    b.HasOne("Quqaz.Web.Models.PaymentWay", "PaymentWay")
                        .WithMany("PaymentRequests")
                        .HasForeignKey("PaymentWayId")
                        .HasConstraintName("FK__PaymentRe__Payme__5BAD9CC8")
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Client");

                    b.Navigation("PaymentWay");
                });

            modelBuilder.Entity("Quqaz.Web.Models.PaymentWay", b =>
                {
                    b.HasOne("Quqaz.Web.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("Quqaz.Web.Models.PointsSetting", b =>
                {
                    b.HasOne("Quqaz.Web.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("Quqaz.Web.Models.Receipt", b =>
                {
                    b.HasOne("Quqaz.Web.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Quqaz.Web.Models.Client", "Client")
                        .WithMany("Receipts")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("FK_Receipt_Clients")
                        .IsRequired();

                    b.HasOne("Quqaz.Web.Models.ClientPayment", "ClientPayment")
                        .WithMany("Receipts")
                        .HasForeignKey("ClientPaymentId")
                        .HasConstraintName("FK__Receipt__ClientP__57DD0BE4");

                    b.Navigation("Branch");

                    b.Navigation("Client");

                    b.Navigation("ClientPayment");
                });

            modelBuilder.Entity("Quqaz.Web.Models.ReceiptOfTheOrderStatus", b =>
                {
                    b.HasOne("Quqaz.Web.Models.User", "Recvier")
                        .WithMany("ReceiptOfTheOrderStatuses")
                        .HasForeignKey("RecvierId")
                        .HasConstraintName("FK__ReceiptOf__Recvi__5B438874")
                        .IsRequired();

                    b.Navigation("Recvier");
                });

            modelBuilder.Entity("Quqaz.Web.Models.ReceiptOfTheOrderStatusDetali", b =>
                {
                    b.HasOne("Quqaz.Web.Models.User", "Agent")
                        .WithMany("ReceiptOfTheOrderStatusDetalis")
                        .HasForeignKey("AgentId")
                        .HasConstraintName("FK__ReceiptOf__Agent__23F3538A")
                        .IsRequired();

                    b.HasOne("Quqaz.Web.Models.Client", "Client")
                        .WithMany("ReceiptOfTheOrderStatusDetalis")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("FK__ReceiptOf__Clien__595B4002")
                        .IsRequired();

                    b.HasOne("Quqaz.Web.Models.Order", "Order")
                        .WithMany("ReceiptOfTheOrderStatusDetalis")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__ReceiptOf__Order__6B79F03D");

                    b.HasOne("Quqaz.Web.Models.ReceiptOfTheOrderStatus", "ReceiptOfTheOrderStatus")
                        .WithMany("ReceiptOfTheOrderStatusDetalis")
                        .HasForeignKey("ReceiptOfTheOrderStatusId")
                        .HasConstraintName("FK__ReceiptOf__Recei__26CFC035")
                        .IsRequired();

                    b.Navigation("Agent");

                    b.Navigation("Client");

                    b.Navigation("Order");

                    b.Navigation("ReceiptOfTheOrderStatus");
                });

            modelBuilder.Entity("Quqaz.Web.Models.Region", b =>
                {
                    b.HasOne("Quqaz.Web.Models.Country", "Country")
                        .WithMany("Regions")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_Reginos_Country")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Quqaz.Web.Models.SendOrdersReturnedToMainBranchModels.SendOrdersReturnedToMainBranchDetali", b =>
                {
                    b.HasOne("Quqaz.Web.Models.SendOrdersReturnedToMainBranchModels.SendOrdersReturnedToMainBranchReport", null)
                        .WithMany("SendOrdersReturnedToMainBranchDetalis")
                        .HasForeignKey("SendOrdersReturnedToMainBranchReportId");
                });

            modelBuilder.Entity("Quqaz.Web.Models.SendOrdersReturnedToMainBranchModels.SendOrdersReturnedToMainBranchReport", b =>
                {
                    b.HasOne("Quqaz.Web.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Quqaz.Web.Models.Driver", "Driver")
                        .WithMany()
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Quqaz.Web.Models.Branch", "MainBranch")
                        .WithMany()
                        .HasForeignKey("MainBranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Driver");

                    b.Navigation("MainBranch");
                });

            modelBuilder.Entity("Quqaz.Web.Models.TransferToBranchModels.TransferToOtherBranch", b =>
                {
                    b.HasOne("Quqaz.Web.Models.Branch", "DestinationBranch")
                        .WithMany()
                        .HasForeignKey("DestinationBranchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Quqaz.Web.Models.Driver", "Driver")
                        .WithMany()
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Quqaz.Web.Models.Branch", "SourceBranch")
                        .WithMany()
                        .HasForeignKey("SourceBranchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DestinationBranch");

                    b.Navigation("Driver");

                    b.Navigation("SourceBranch");
                });

            modelBuilder.Entity("Quqaz.Web.Models.TransferToBranchModels.TransferToOtherBranchDetials", b =>
                {
                    b.HasOne("Quqaz.Web.Models.TransferToBranchModels.TransferToOtherBranch", "TransferToOtherBranch")
                        .WithMany("TransferToOtherBranchDetials")
                        .HasForeignKey("TransferToOtherBranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TransferToOtherBranch");
                });

            modelBuilder.Entity("Quqaz.Web.Models.Treasury", b =>
                {
                    b.HasOne("Quqaz.Web.Models.User", "IdNavigation")
                        .WithOne("Treasury")
                        .HasForeignKey("Quqaz.Web.Models.Treasury", "Id")
                        .HasConstraintName("FK__Treasury__Id__60FC61CA")
                        .IsRequired();

                    b.Navigation("IdNavigation");
                });

            modelBuilder.Entity("Quqaz.Web.Models.TreasuryHistory", b =>
                {
                    b.HasOne("Quqaz.Web.Models.CashMovment", "CashMovment")
                        .WithMany("TreasuryHistories")
                        .HasForeignKey("CashMovmentId")
                        .HasConstraintName("FK__TreasuryH__CashM__1E3A7A34");

                    b.HasOne("Quqaz.Web.Models.ClientPayment", "ClientPayment")
                        .WithMany("TreasuryHistories")
                        .HasForeignKey("ClientPaymentId")
                        .HasConstraintName("FK__TreasuryH__Clien__65C116E7");

                    b.HasOne("Quqaz.Web.Models.Income", "Income")
                        .WithMany("TreasuryHistories")
                        .HasForeignKey("IncomeId")
                        .HasConstraintName("FK__TreasuryH__Incom__6991A7CB");

                    b.HasOne("Quqaz.Web.Models.OutCome", "Outcome")
                        .WithMany("TreasuryHistories")
                        .HasForeignKey("OutcomeId")
                        .HasConstraintName("FK__TreasuryH__Outco__6A85CC04");

                    b.HasOne("Quqaz.Web.Models.Receipt", "Receipt")
                        .WithMany("TreasuryHistories")
                        .HasForeignKey("ReceiptId")
                        .HasConstraintName("FK__TreasuryH__Recei__1F2E9E6D");

                    b.HasOne("Quqaz.Web.Models.ReceiptOfTheOrderStatus", "ReceiptOfTheOrderStatus")
                        .WithMany("TreasuryHistories")
                        .HasForeignKey("ReceiptOfTheOrderStatusId")
                        .HasConstraintName("FK__TreasuryH__Recei__27C3E46E");

                    b.HasOne("Quqaz.Web.Models.Treasury", "Treasury")
                        .WithMany("TreasuryHistories")
                        .HasForeignKey("TreasuryId")
                        .HasConstraintName("FK__TreasuryH__Treas__1C5231C2")
                        .IsRequired();

                    b.Navigation("CashMovment");

                    b.Navigation("ClientPayment");

                    b.Navigation("Income");

                    b.Navigation("Outcome");

                    b.Navigation("Receipt");

                    b.Navigation("ReceiptOfTheOrderStatus");

                    b.Navigation("Treasury");
                });

            modelBuilder.Entity("Quqaz.Web.Models.User", b =>
                {
                    b.HasOne("Quqaz.Web.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("Quqaz.Web.Models.UserBranch", b =>
                {
                    b.HasOne("Quqaz.Web.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Quqaz.Web.Models.User", "User")
                        .WithMany("Branches")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Quqaz.Web.Models.UserGroup", b =>
                {
                    b.HasOne("Quqaz.Web.Models.Group", "Group")
                        .WithMany("UserGroups")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK_UserGroup_Group")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Quqaz.Web.Models.User", "User")
                        .WithMany("UserGroups")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UserGroup_Users")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Quqaz.Web.Models.UserPhone", b =>
                {
                    b.HasOne("Quqaz.Web.Models.User", "User")
                        .WithMany("UserPhones")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UserPhone_Users")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Quqaz.Web.Models.AgentPrint", b =>
                {
                    b.Navigation("AgentOrderPrints");

                    b.Navigation("AgentPrintDetails");
                });

            modelBuilder.Entity("Quqaz.Web.Models.Branch", b =>
                {
                    b.Navigation("BranchToCountryDeliverryCosts");
                });

            modelBuilder.Entity("Quqaz.Web.Models.CashMovment", b =>
                {
                    b.Navigation("TreasuryHistories");
                });

            modelBuilder.Entity("Quqaz.Web.Models.Client", b =>
                {
                    b.Navigation("ClientPhones");

                    b.Navigation("DisAcceptOrders");

                    b.Navigation("EditRequests");

                    b.Navigation("Markets");

                    b.Navigation("Notfications");

                    b.Navigation("OrderFromExcels");

                    b.Navigation("OrderLogs");

                    b.Navigation("Orders");

                    b.Navigation("PaymentRequests");

                    b.Navigation("ReceiptOfTheOrderStatusDetalis");

                    b.Navigation("Receipts");
                });

            modelBuilder.Entity("Quqaz.Web.Models.ClientPayment", b =>
                {
                    b.Navigation("ClientPaymentDetails");

                    b.Navigation("Discounts");

                    b.Navigation("OrderClientPaymnets");

                    b.Navigation("Receipts");

                    b.Navigation("TreasuryHistories");
                });

            modelBuilder.Entity("Quqaz.Web.Models.Country", b =>
                {
                    b.Navigation("AgentCountries");

                    b.Navigation("Branch");

                    b.Navigation("BranchToCountryDeliverryCosts");

                    b.Navigation("Clients");

                    b.Navigation("DisAcceptOrders");

                    b.Navigation("FromCountries");

                    b.Navigation("MediatorCountries");

                    b.Navigation("OrderCountries");

                    b.Navigation("OrderLogs");

                    b.Navigation("Regions");

                    b.Navigation("ToCountries");
                });

            modelBuilder.Entity("Quqaz.Web.Models.Group", b =>
                {
                    b.Navigation("GroupPrivileges");

                    b.Navigation("UserGroups");
                });

            modelBuilder.Entity("Quqaz.Web.Models.Income", b =>
                {
                    b.Navigation("TreasuryHistories");
                });

            modelBuilder.Entity("Quqaz.Web.Models.IncomeType", b =>
                {
                    b.Navigation("Incomes");
                });

            modelBuilder.Entity("Quqaz.Web.Models.Order", b =>
                {
                    b.Navigation("AgentOrderPrints");

                    b.Navigation("OrderClientPaymnets");

                    b.Navigation("OrderItems");

                    b.Navigation("OrderLogs");

                    b.Navigation("ReceiptOfTheOrderStatusDetalis");
                });

            modelBuilder.Entity("Quqaz.Web.Models.OrderType", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("Quqaz.Web.Models.OutCome", b =>
                {
                    b.Navigation("TreasuryHistories");
                });

            modelBuilder.Entity("Quqaz.Web.Models.OutComeType", b =>
                {
                    b.Navigation("OutComes");
                });

            modelBuilder.Entity("Quqaz.Web.Models.PaymentWay", b =>
                {
                    b.Navigation("PaymentRequests");
                });

            modelBuilder.Entity("Quqaz.Web.Models.Privilege", b =>
                {
                    b.Navigation("GroupPrivileges");
                });

            modelBuilder.Entity("Quqaz.Web.Models.Receipt", b =>
                {
                    b.Navigation("TreasuryHistories");
                });

            modelBuilder.Entity("Quqaz.Web.Models.ReceiptOfTheOrderStatus", b =>
                {
                    b.Navigation("ReceiptOfTheOrderStatusDetalis");

                    b.Navigation("TreasuryHistories");
                });

            modelBuilder.Entity("Quqaz.Web.Models.Region", b =>
                {
                    b.Navigation("DisAcceptOrders");

                    b.Navigation("OrderLogs");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Quqaz.Web.Models.SendOrdersReturnedToMainBranchModels.SendOrdersReturnedToMainBranchReport", b =>
                {
                    b.Navigation("SendOrdersReturnedToMainBranchDetalis");
                });

            modelBuilder.Entity("Quqaz.Web.Models.TransferToBranchModels.TransferToOtherBranch", b =>
                {
                    b.Navigation("TransferToOtherBranchDetials");
                });

            modelBuilder.Entity("Quqaz.Web.Models.Treasury", b =>
                {
                    b.Navigation("CashMovments");

                    b.Navigation("TreasuryHistories");
                });

            modelBuilder.Entity("Quqaz.Web.Models.User", b =>
                {
                    b.Navigation("AgentCountries");

                    b.Navigation("Branches");

                    b.Navigation("Clients");

                    b.Navigation("EditRequests");

                    b.Navigation("Incomes");

                    b.Navigation("OrderLogs");

                    b.Navigation("Orders");

                    b.Navigation("OutComes");

                    b.Navigation("ReceiptOfTheOrderStatusDetalis");

                    b.Navigation("ReceiptOfTheOrderStatuses");

                    b.Navigation("Treasury");

                    b.Navigation("UserGroups");

                    b.Navigation("UserPhones");
                });
#pragma warning restore 612, 618
        }
    }
}
